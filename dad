[1mdiff --git a/client/src/App.css b/client/src/App.css[m
[1mindex 952a57f..2759151 100644[m
[1m--- a/client/src/App.css[m
[1m+++ b/client/src/App.css[m
[36m@@ -14,7 +14,6 @@[m
  }[m
 }[m
 [m
[31m-[m
 .homepage-title[m
 {[m
   font-family: 'Arvo', serif;[m
[1mdiff --git a/models/Deck.js b/models/Deck.js[m
[1mindex 65c38c4..095765d 100644[m
[1m--- a/models/Deck.js[m
[1m+++ b/models/Deck.js[m
[36m@@ -6,8 +6,9 @@[m [mvar DeckSchema = new mongoose.Schema({[m
   cards:[m
   {[m
     type:Array,[m
[31m-    default:[{rank:'a',suit:'diams'},{rank:'a',suit:'clubs'},{rank:'a',suit:'spades'},{rank:'a',suit:'hearts'},[m
[31m-    {rank:'k',suit:'diams'},{rank:'k',suit:'clubs'},  {rank:'k',suit:'spades'},{rank:'k',suit:'hearts'},[m
[32m+[m[32m    default:[[m
[32m+[m[32m    {rank:'a',suit:'diams'},{rank:'a',suit:'clubs'},{rank:'a',suit:'spades'},{rank:'a',suit:'hearts'},[m
[32m+[m[32m    {rank:'k',suit:'diams'},{rank:'k',suit:'clubs'},{rank:'k',suit:'spades'},{rank:'k',suit:'hearts'},[m
     {rank:'q',suit:'diams'},{rank:'q',suit:'clubs'},{rank:'q',suit:'spades'},{rank:'q',suit:'hearts'},[m
     {rank:'j',suit:'diams'},{rank:'j',suit:'clubs'},{rank:'q',suit:'spades'},{rank:'q',suit:'hearts'},[m
     {rank:'10',suit:'diams'},{rank:'10',suit:'clubs'},{rank:'10',suit:'spades'},{rank:'10',suit:'hearts'},[m
[36m@@ -18,9 +19,7 @@[m [mvar DeckSchema = new mongoose.Schema({[m
     {rank:'5',suit:'diams'},{rank:'5',suit:'clubs'},{rank:'5',suit:'spades'},{rank:'5',suit:'hearts'},[m
     {rank:'4',suit:'diams'},{rank:'4',suit:'clubs'},{rank:'4',suit:'spades'},{rank:'4',suit:'hearts'},[m
     {rank:'3',suit:'diams'},{rank:'3',suit:'clubs'},{rank:'3',suit:'spades'},{rank:'3',suit:'hearts'},[m
[31m-    {rank:'2',suit:'diams'},{rank:'2',suit:'clubs'},{rank:'2',suit:'spades'},{rank:'2',suit:'hearts'}[m
[31m-  ];[m
[31m-][m
[32m+[m[32m    {rank:'2',suit:'diams'},{rank:'2',suit:'clubs'},{rank:'2',suit:'spades'},{rank:'2',suit:'hearts'}][m
   }[m
 })[m
 [m
[1mdiff --git a/models/Player.js b/models/Player.js[m
[1mindex 6a699a6..fb5ab75 100644[m
[1m--- a/models/Player.js[m
[1m+++ b/models/Player.js[m
[36m@@ -10,11 +10,11 @@[m [mvar PlayerSchema = new mongoose.Schema({[m
   user:{[m
     type:String,[m
     default:""[m
[31m-  }[m
[32m+[m[32m  },[m
   chips:{[m
     type:Number,[m
     default:500[m
[31m-  }[m
[32m+[m[32m  },[m
   currentCards:{[m
     type:Array,[m
     default:[][m
[36m@@ -30,7 +30,7 @@[m [mvar PlayerSchema = new mongoose.Schema({[m
   table:{[m
     type:String,[m
     default:""[m
[31m-  }[m
[32m+[m[32m  },[m
   socket_id:{[m
     type:String[m
   },[m
[1mdiff --git a/models/Table.js b/models/Table.js[m
[1mindex 6983e1d..e27157f 100644[m
[1m--- a/models/Table.js[m
[1m+++ b/models/Table.js[m
[36m@@ -6,8 +6,8 @@[m [mvar TableSchema = new mongoose.Schema({[m
 [m
     deck_id:{[m
       type:String,[m
[31m-      default:'';[m
[31m-    }[m
[32m+[m[32m      default:''[m
[32m+[m[32m    },[m
     players:[m
     {[m
       type:Array,[m
[1mdiff --git a/models/User.js b/models/User.js[m
[1mindex e69de29..df7320f 100644[m
[1m--- a/models/User.js[m
[1m+++ b/models/User.js[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mconst mongoose = require('mongoose');[m
[32m+[m[32mconst bcrypt = require('bcryptjs');[m
[32m+[m[32mconst db = mongoose.createConnection('mongodb://localhost/users');[m
[32m+[m
[32m+[m[32mvar UserSchema = new mongoose.Schema({[m
[32m+[m	[32musername: {[m
[32m+[m		[32mtype: String,[m
[32m+[m		[32mdefault: ""[m
[32m+[m	[32m},[m
[32m+[m	[32mpassword: {[m
[32m+[m		[32mtype: String,[m
[32m+[m		[32mdefault: ""[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mUserSchema.methods.generateHash = function (password) {[m
[32m+[m	[32mreturn bcrypt.hash(password, bcrypt.genSaltSync(8), null);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mUserSchema.methods.validPassword = function (password) {[m
[32m+[m	[32mreturn bcrypt.compare(password, this.password);[m
[32m+[m[32m};[m
[32m+[m[32mmodule.exports = db.model("User", UserSchema, "UserData");[m
