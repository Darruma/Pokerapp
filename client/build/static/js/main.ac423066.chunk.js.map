{"version":3,"sources":["graphics/leaderboard.png","graphics/profiles.png","components/Main.jsx","actions/profile.js","components/Friend.jsx","components/Post.jsx","components/Posts.jsx","components/Pricechart.jsx","components/Piechart.jsx","components/Profile.jsx","actions/leaderboard.js","components/Leaderboard.jsx","components/Game.jsx","components/Signup.jsx","actions/login.js","components/Account.jsx","components/Login.jsx","reducers/rootReducer.js","App.jsx","serviceWorker.js","index.js","graphics/poker.png"],"names":["module","exports","__webpack_require__","p","Main","react_default","a","createElement","className","Link","to","src","leaderboard","poker","profiles","Component","getProfileAction","username","dispatch","fetch","then","res","json","data","type","payload","Friend","this","props","friendName","image","Post","title","content","Posts","style","display","flexDirection","overflow","posts","map","element","components_Post","PriceChart","paddingTop","es6","width","height","margin","top","right","left","bottom","dataKey","CartesianGrid_default","WinsChart","dist_default","radius","value","wins","color","draws","losses","Profile","profileData","match","params","userId","bio","friends","components_Friend","components_Posts","Pricechart","priceData","Piechart","connect","state","updateleaderboardAction","Leaderboard","profilePicture","points","updateLeaderboard","Game","Signup","updateLoginAction","Login","handleFormSubmit","e","preventDefault","console","log","_this","password","handleInputChange","target","_this2","onSubmit","onChange","placeholder","initialState","header","rootReducer","arguments","length","undefined","action","Object","assign","store","createStore","applyMiddleware","thunk","App","es","HashRouter","components_Main","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac423066.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leaderboard.3bb64250.png\";","module.exports = __webpack_public_path__ + \"static/media/profiles.6570b872.png\";","import React, { Component } from 'react'\nimport '../css/main.css'\nimport '../App.css'\nimport {Link} from 'react-router-dom'\nimport poker from '../graphics/poker.png'\nimport leaderboard from '../graphics/leaderboard.png';\nimport profiles from '../graphics/profiles.png'\nclass Main extends Component\n{   \n    render()\n    {\n        return(\n            <div className='App'>\n            <nav className='side-bar'>\n            <Link className='link' to='/leaderboard'><img  className='icon' src={leaderboard}></img></Link>\n            <Link className='link' to='/game'><img  className='icon' src={poker}></img></Link>\n            <Link className='link' to='/account'><img  className='icon' src={profiles}></img></Link>\n            </nav>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Main;","\nconst getProfileAction = (username) => {\n    return (dispatch) =>\n    {\n    fetch('/api/profile/'+username ).then(res => res.json())\n        .then((data) => {\n            dispatch(\n                {\n                    type: 'GET_PROFILE',\n                    payload: data\n                }\n            )\n        }\n    )\n    }\n}\nexport default getProfileAction;","import React, { Component } from 'react'\nimport '../css/friend.css'\nimport { Link } from 'react-router-dom';\nclass Friend extends Component\n{   \n    render()\n    {\n    \n        return(\n            <Link to={this.props.data.friendName} className='friend-link'>\n            <div className='friend'>\n                <div className='image'>\n                    <img src={this.props.data.image} className='image-40'></img>\n                </div>\n                <p className='friend-name'>{this.props.data.friendName}</p>\n            </div>                      \n            </Link>\n        )\n    }\n\n\n}\n\nexport default Friend;","import React, { Component } from 'react'\nimport '../css/post.css'\nclass Post extends Component\n{\n    render()\n    {\n        return(\n            <div className='post'>\n               <p className='post-title'>{this.props.title}</p>\n               <p className='post-content'>{this.props.content}</p>\n            </div>\n        )\n    }\n}\nexport default Post","import React, { Component } from 'react'\nimport Post from './Post'\nclass Posts extends Component\n{\n    render()\n    {\n        \n        return(\n            <div style={{display:'flex',flexDirection:'column',overflow:'hidden'}} > \n                {this.props.posts.map(element =>\n                    {\n                        return(\n                            <Post title={element.title} content={element.content}></Post>\n                        )\n                    })}\n            </div>\n        )\n    }\n    componentDidMount()\n    {\n        \n    }\n}\nexport default Posts","import React, { Component } from 'react'\nimport {LineChart, Line, XAxis, YAxis, Tooltip, Legend} from 'recharts';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nclass PriceChart extends Component\n{   \n    render()\n    {\n        return(\n            <div style={{paddingTop:'20px'}}>\n               \n            <LineChart width={700} height={350} data={this.props.data}\n            margin={{top: 5, right: 30, left: 20, bottom: 5}} >\n                <XAxis dataKey=\"date\"/>\n                <YAxis/>\n                <Tooltip/>\n                <CartesianGrid></CartesianGrid>\n                <Legend />\n                <Line dataKey=\"points\"  />\n            </LineChart>\n            </div>\n        )\n    }\n}\nexport default PriceChart","import React, { Component } from 'react'\nimport '../css/piechart.css'\nimport PieChart from 'react-minimal-pie-chart';\nclass WinsChart extends Component {\n\n    render() {\n\n        return (<div>\n            <PieChart radius={25}\n                data={[\n                    { title: 'Wins', value: this.props.wins, color: '#0dc441' },\n                    { title: 'Draws', value: this.props.draws, color: '#d7f226' },\n                    { title: 'Losses', value: this.props.losses, color: '#c11b1b' },\n                ]}\n            />\n        </div>\n        )\n    }\n}\nexport default WinsChart;","import React, { Component } from 'react'\nimport '../css/profile.css'\nimport '../App.css'\nimport getProfileAction from '../actions/profile'\nimport { connect } from 'react-redux';\nimport Friend from './Friend';\nimport Posts from './Posts'\nimport PriceChart from './Pricechart';\nimport PieChart from './Piechart';\nclass Profile extends Component {\n\n    render() {\n        return (\n            <div className='Profile'>\n                <div className='header-image'>\n\n                </div>\n                <div className='profile-container'>\n                    <div className='profile-picture'>\n                        <img src={this.props.profileData.image} className='picture'></img>\n                    </div>\n                    <p className='profile-username'>\n                    {this.props.match.params.userId}\n                    </p>\n                    <div className='bio'>\n                        {this.props.profileData.bio}\n                    </div>\n                    <div className='friends'>\n                    <p className='friends-title'>Friends</p>\n                        {this.props.profileData.friends.map(element => {\n                            return (<Friend data={element}>\n                            </Friend>)\n                        }\n                        )}\n                    </div>\n                </div>\n\n                <div className='main'>\n                    <p className='profile-username posts-title' >Posts</p>\n                                        <div className='posts'>\n                    <Posts posts={this.props.profileData.posts}></Posts>\n                    </div>\n                </div>\n\n                <div className='statistics'>\n                    <div className='line-chart'>\n                            <PriceChart data={this.props.profileData.priceData}></PriceChart>\n                    </div>\n\n                    <div className='pie-chart'>\n                    <PieChart wins={this.props.profileData.wins} losses={this.props.profileData.losses} draws={this.props.profileData.draws}></PieChart>\n                    </div>\n                    <div className='tags'>\n                    <p className='tag'>Wins <div className='green block'></div></p> \n                    <p className='tag'>Losses <div className='red block'></div></p> \n                    <p className='tag' > Draws <div className='yellow block'></div> </p> \n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getProfileAction(this.props.match.params.userId));\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profileData: state.profileData\n    }\n}\n\nexport default connect(mapStateToProps)(Profile)","\nconst updateleaderboardAction = () => {\n    return (dispatch) =>\n    {\n        fetch('/api/leaderboard')\n        .then( res => res.json())\n        .then((data) =>\n        {\n            dispatch({\n                type:'UPDATE_LEADERBOARD',\n                payload:data\n            })\n        })\n    }\n}\nexport default updateleaderboardAction;","import React, { Component } from 'react';\r\nimport '../css/leaderboard.css'\r\nimport '../App.css'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport updateLeaderboard from '../actions/leaderboard'\r\nclass Leaderboard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <ul className='leaderboard-container'>\r\n                    <h1>Leaderboard</h1>\r\n                    {this.props.leaderboard.map((element) => {\r\n                        return (\r\n                            <Link to={'/profile/' + element.username} className='profile-link'>\r\n                                <li className='user-stats'>\r\n                                    <img className='image' src={element.profilePicture} />\r\n                                    <div className='username'>\r\n                                        {element.username}\r\n                                    </div>\r\n                                    <div className='points'>\r\n                                        {element.points}$\r\n                            </div>\r\n                                </li>\r\n                            </Link>\r\n\r\n                        )\r\n                    }\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(updateLeaderboard());\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        leaderboard: state.leaderboard\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);","import React, { Component } from 'react'\n\n\nclass Game extends Component\n{   \n    render()\n    {\n        return(\n            <div>game</div>\n        )\n    }\n\n\n}\n\nexport default Game;","import React, { Component } from 'react'\n\n\nclass Signup extends Component\n{   \n    render()\n    {\n        return(\n            <div></div>\n        )\n    }\n\n\n}\n\nexport default Signup;","const updateLoginAction = (type,value) => {\n    return({\n        type:'UPDATE_' + type,\n        payload:value\n    })\n}\nexport default updateLoginAction;","import React, { Component } from 'react'\n\n\nclass Profiles extends Component\n{   \n    render()\n    {\n        return(\n            <div>Profiles</div>\n        )\n    }\n\n\n}\n\nexport default Profiles;","import React, { Component } from 'react'\nimport '../css/login.css'\nimport { connect } from 'react-redux';\nimport updateLoginAction from '../actions/login'\nclass Login extends Component {\n    render() {\n        return (\n            <div className='login-container'>\n                <form onSubmit={this.handleFormSubmit}>\n                    <div className='username-container'>\n                    <input className='input' onChange={ (e) => this.handleInputChange(e,'USERNAME')}placeholder=\"username\"></input>\n                    </div>\n\n                    <div className='password-container'>\n                    <input className='input' onChange={ (e) => this.handleInputChange(e,'PASSWORD')} type='password' placeholder=\"password\"></input>\n                    </div>\n                    <div className='login-button-container'>\n                    <button className='login-button'> Login</button>\n                        </div>\n                </form>\n            </div>\n        )\n    }\n    handleFormSubmit = (e) => \n    {\n       e.preventDefault();\n       console.log(this.props.username);\n       console.log(this.props.password);\n    }\n    handleInputChange = (e,type) =>\n    {\n      \n       this.props.dispatch(updateLoginAction(type,e.target.value));\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.username,\n        password:state.password\n    }\n}\nexport default connect(mapStateToProps)(Login);","const initialState = \n{\n    leaderboard:[],\n    profileData:{\n        username: '',\n        image: '',\n        bio: '',\n        header: '',\n        friends: [],\n        posts:[],\n        priceData:[],\n        wins:0,\n        losses:0,\n        draws:0\n    }\n}\n\nconst rootReducer = (state=initialState,action) =>\n{\n    switch (action.type) {\n        case 'UPDATE_LEADERBOARD':\n        return Object.assign({}, state, {\n            leaderboard:action.payload\n          }) \n        case 'GET_PROFILE':\n        return Object.assign({}, state, {\n            profileData:action.payload\n          }) \n        default:\n            return state;\n    }\n    \n}\nexport default rootReducer;","import React, { Component } from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Main from './components/Main';\nimport Profile from './components/Profile';\nimport Leaderboard from './components/Leaderboard';\nimport Game from './components/Game';\nimport Signup from './components/Signup'\nimport Account from './components/Account';\nimport Login from './components/Login'\n\n// Redux\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer'\nconst store = createStore(rootReducer,applyMiddleware(thunk));\n\n\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                    <Router>\n                        <div>\n                            <Main>\n                            </Main>\n                            <Switch>\n                                <Route exact path ='/' component={Login}></Route>\n                                <Route path='/signup' component={Signup}></Route>\n                                <Route path='/profile/:userId' component={Profile}></Route>\n                                <Route path='/leaderboard' component={Leaderboard}></Route>\n                                <Route path='/game' component={Game}> </Route>\n                                <Route path='/account' component={Login}> </Route>\n                            </Switch>\n                        </div>\n                    </Router>\n            </Provider>\n        )\n    }\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/poker.d649605d.png\";"],"sourceRoot":""}